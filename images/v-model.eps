%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 832.000000 391.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 832 391
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 832 391
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Roboto-Regular
%!FontType1-1.0: Roboto-Regular 1.0000.1.0000
14 dict begin/FontName /Roboto-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /o put
dup 35 /f put
dup 36 /t put
dup 37 /w put
dup 38 /a put
dup 39 /r put
dup 40 /e put
dup 41 /space put
dup 42 /R put
dup 43 /q put
dup 44 /period put
dup 45 /p put
dup 46 /c put
dup 47 /y put
dup 48 /s put
dup 49 /m put
dup 50 /i put
dup 51 /n put
dup 52 /g put
dup 53 /H put
dup 54 /h put
dup 55 /l put
dup 56 /v put
dup 57 /d put
dup 58 /L put
dup 59 /C put
dup 60 /B put
dup 61 /u put
dup 62 /A put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -980 1 index div -555 2 index div 2396 3 index div 2167 5 -1 roll div]cvx def
/sfnts [<






B28F0C0174B2CF0C0174B2FF0C0174B23F0C0175B26F0C0175B2BF0E0173B22F0E0174B29F0E0174B2BF0E0174B20F0E0175B22F0E0175B22F100173B25F100173B2FF100173B2CF100174B23F120173B20F120173B2B0120173B27F120173B20F120174B25F120174B27F120175B2DF120174B26F120175B22F120175B23F120175B2EF120174B29F120174B21F120174B2EF120173B20F140173B21F140173B22F140173B23F140173B25F140173B26F140173B27F140173B2AF140173B28F140174B2AF140174B2BF140174B2CF140174B22F140175B23F140175
00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/A 3 def
/B 4 def
/C 5 def
/H 6 def
/L 7 def
/R 8 def
/S 9 def
/a 10 def
/c 11 def
/d 12 def
/e 13 def
/f 14 def
/g 15 def
/h 16 def
/i 17 def
/l 18 def
/m 19 def
/n 20 def
/o 21 def
/p 22 def
/q 23 def
/r 24 def
/s 25 def
/t 26 def
/u 27 def
/v 28 def
/w 29 def
/y 30 def
/ogonek 31 def
/U.smcp 32 def
/Uogonek.smcp 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-980 -555 2396 2167}def
/UniqueID 4247813 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF8582693441BFA40888AF905FF75E47F70DE4CD49D4BBBBBA99C8B9C05B033FB8DE22D7D3FF19D06CB555A6AC06A365378D4943652CD0F3F51165FA5F08A351EFEDF345EDCFEF3C151F56CCA897DB8A76B981826ACAA4953845657FC886AFB7954652165B24D29CC6A5C2ABDC33FA3509F82D4E5880931B18355702DF927A4A1E5C8FC4F4E7EDA3497DBBCD67AFCB8FFE30EF9774395212587B5ABB98C35CD445CF73D94861298C5383978B23F07A813F152547C9175258395C74E457EC92F17F85C94F0DA517C0816D1AD249DF38EF57DFD104836CCAE83D1D2851C47DD17E9DEEB8526F20E6547A6F6629AD7F1EE8DA35FDF231F5AA28F01D2E44E34E895991CB9C373C80EADF974208986A2FF06A93D08D6B11CB8C63D50C7B40695FE87353C61EBA236EFE5DC1B534121A9C8FCECC7E37EA970A54908B681C804D22777A9570F819C47F8A642AAD0D3F4DE3EDE9F654B97A88FDDFFFD5844286FEE8DF8524449C288CF4A05D4DD02CE3171C27DF3B46FD6A755078F7C855EAEBA72F8355BFFEA4B21763C2DA1F6A02B01B6D8CE8FCFD1A43BBAD3F3097947202DE16DFE0B761E9F7935FE095F2DDF0BEBE37AA283B004DFAADE46E5190C22F6AAC484A814BD16A11D9508D2038F24C5BC8F08085836BDDB17B627E70ED6E72D87CFD5615448FF29057E1EB1EF04BF42362AE9D6EA895697710849550033F5B5ACAA4ED3F651DB11BEC7AD54D84946B52832802550FD3B188EB7E192D218215F65905F3959C3E6B98C6ED884399BF8A030BDFF562D436127C1826569AC


7669402C53E31D4FC9C979C1E74A971DDAB99A261E453C83C3FE75F59D56B678EA944418443D14198D9F4AFC392C844A5E46A09E2B2F8143600A5A97F0B14D5B8FB64A911C5461E233F69F22CD8F24D3BE2590EAF33077379A8A4FE9458551507B617FFA057102CCAD4F8A929BCA05E2173B3B628AC873839F9047E3D199A3CF48A66573276AF335200400BF38F560A2C11F8CB9B878146C4FE1E637B37DA92B65F5A45C2C2154C710613558A674FC9E31A569D9F132FA0F9BC1A573E1A7724440B14D6D74AF71DDE0FEB4A614275DC3773677CB9A50A98552D743B38344128730399804CF21F828D1ADCB438F181A5CC0F15DFFE1445A45D1D84DC1B3165E049E073DEE42E21FC3B7EF5B6678D484BA5C96D1686F25EC235413CB3A1F826804509D9C35CB9AC61C0ACCF3EB3D538DDA0873CB38062BEA4CD0A63BC80F682A6DE60E79DE5A08355CB63B616D68EDA0BD4242D0EA4AEAB9FEBC17B9287FB90D1CD8BC1868662F5E706F4C3E14F44CA4EEB03A82DDB12C47542111AC21A60B2E5484FF9B85E65F846A2285287EDDABDEC3371E087E725178382BFE7D32E0ED95F42E66381B1BB9CC40643A661BEB5075DFE7ADD006E6761B64EFD0ABDA3F27E20DDC1898ACFE98C55B409966AEB913B27380568649C5BA70E07DE7A43D550FBA7FCC75DBC53200F04CD976A84B49441E174C18E105635DD29190C3A3655677455F11AEAA582DC13D63EFE568ABE31784CA6284028F7A17D45EAF56A669D8C6CC156CDA14D7B748BA1A04D5413FD07855630885D2E0A399415A1AA10D43BA543C459ECCA7A0D6A7DE2FD96DA58CD02559B7D701D0D1E28620BFAFA829FBCB37141A519712B30FA58F4F8BF041B23AF1D345F20EB128C13E7B5DBF656F237EC00E0431FD89FF325430F5DB388C4F5E571B99A170004A505F6CCA88B6E06FAEDE0CC161C301511C1DAE2D57BCB3738CA58B96C6F310EBD8908A361690496BB653AF5E20330A2F537E997CFDEBC406144ECE257377CB39E391B7DAC6DE62E06C53906ED77345F27F091656DB847656B4D68CA778F917134213FC734B8035CACCF4553C169A77C1FFBD29E5673BD265344545C822C400F1CD1DB2B9CC006D15AF6EE67AE482392564AA773109F5EA1A5DC401B928FF01CF2122C6FF33D1174B4E2A2195EACF2C479EF958DC8D8A735BBC863B2151DB308304B8AAD04552DA319885C4B46A4148533239E39DD678DA9CC725D469E69C7F38B2CDDAA3BD67A59EF1E5F2274494205AA97827B0151A27933509DDBCE46E0A1D2B791D6B56FAD3A565C2B153EBB68DDC0DB6B290BAFD1F47E00AFA6E8917D8FB1467800BD2B79ECF4F11E7F656E56DA2071ECD9004938B940CB490F6076F11617838EF23E9ABD85DFBAF206FBD97EFA3303EA6C14F4E1A7B1AED7A9079DBBB7E10863D92368C2C6A7C90C670
9AA2DB05FFF3A135F2E05470D0107EC0C6160AE189141BB62FB5F01BFEB4F0B6517D520AE03875F6B8F0183DE7D7EC07DADD925BD46BB365B355465D26BF7F1F2EFD50934F54C7986ACE35482EDB7D9A13C85A91ADBC46720D8214097E8EBAB35ACB7880EDAB64C269C0FC92E47B94C0A6649C60193D9947CE1A16A9757BEF25E005956823B165AF17CD4AC1EABAFB0C4B0D1EC48EC8FEB02876A93E2194C4BD41B35E7D0D9180EB11999FB7671F55213EF8D7CB7279A640E4DCEEBC146D1E9DC797DD30340FF384AF92C41D57706A60646787AE270AC8E1AD3094800FEBE77763B42C4CFFD7345FF141F1EF208C91834D05A7B1115080F4AC493881D0D69F782D161F28A393C92F45616A3008558D2C70690C7F4676B944558AEC8E9B2F0E0A94A82866A9F1280CC0BE298CA9A70A0152AE3A6AAF32394E0EA719C3305AA72C1583CCA87DE4D99C931138AF9864B262E55426D93F9D2F16B2DECF1313103601061260CDEBBF41DC6DD6811C8B4E79624C3E1980C297F3FCDAFBC3B8CA70CBB0399E9CBBFA38978FC742427A4B3D0CD460F1151AA43F0AE5D6A13B9A992C65A864464FCADBFAF36B8575F887398935221A0ED4B9F34F6D737C423AEE971F7F1D0DF1E0F64B15459677AF4E2E423D43E7C5B6D17D20071C3B7D85BF33C5123CF21DBDBC9722A46A28E523A8B881B0E24E4DA676A639E04DF2E34ED7C3014D058E9154E6345D6628339A63807BE4EFB693D0BB9A447FB31BA3C650F00D97D6AA415B72E09335647437D5289E1A14AC7176192C064D9D6EF937034A92F6B4F27DACB33F6AF955940D3985D829454A93E8DAEB3501FE69283335BDA4EB56E1831BCB24BAC975B739D25F189CD6B617BA3CA45E7BECA3814606457CA9D5FDC1B11C98ABB2B60A651937072F9A6CDB650A17FA89DF29398D246883EA222B075C39259A0D9BBAFF19EB538CC75FC91381C4CC66ADA2106BC4E65A321403913E4F421D313C6902A884CDF60D94B6982A687E7ED74FDE4BA1CDE7568C22A9A7AFA78DE9DD19E1A878960546118CF311553082226B47519B94EC91945CBEB79434CB368D97265D8C487008D31EFB1FFFBD7051DB430086C7635361EFB4E92434252645319257A7A1850685AEED912E8FDEE5C849405B0B611D49AC7EE58E420EF4483D151DADDD7FF81A0A8A6C1C0F93FC6DF39196CB1C9EC92BF4C1124FD2BB82044D4EEA6792E6FB8CC2B0C8EE68EAF4965D0050572B71967F6537AC805F86D1220CF25303319B6DA923D3866F7E4DDA14FA00F0781C153A47DC3C7D99
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Roboto-Regular cguidfix
/F1.1/Roboto-Regular renmfont
%RBIBeginFontSubset: Roboto-Bold
%!FontType1-1.0: Roboto-Bold 1.0000.1.0000
14 dict begin/FontName /Roboto-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /U put
dup 34 /n put
dup 35 /i put
dup 36 /t put
dup 37 /space put
dup 38 /e put
dup 39 /s put
dup 40 /g put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1035 1 index div -555 2 index div 2440 3 index div 2172 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 12 dict dup begin
/.notdef 0 def
/space 1 def
/U 2 def
/e 3 def
/g 4 def
/i 5 def
/n 6 def
/s 7 def
/t 8 def
/macron 9 def
/uni0423 10 def
/uni04EE 11 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1035 -555 2440 2172}def
/UniqueID 4052120 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934F32286AAEFCA092DB34C59F118964179DC81C28D43B6AD51122BB2350AA96F678C5AC635DFFA0E0C0AE5E18692597795674A6DC8E319DEDAA8F4A535057282BB47A9F7EFC33B1B17DA3168A866249CDA32C20CA8C3C86B77D89BA75B083B3A0E755D589942CFE8DBC3726F813F500F90A4B03CD10E8AE0750E383DFAE271189394032317FD39C4463744E19358FFDA8276CF5FB12ABDD2F809E46AE5F375BA47201B68C6D7A34D155480344FB8AE70DE81284F9AF031EED0A3F274CE565AF1B3DA54C941FB7591FFA40F5428DF7B850D1566DA9926EA567FFE5EEC3508A89ABB57F6864060A36F4BC726D373F73048A63FDD72F39D0F04FDBB96D3FD314C46C0598C77EF69C0594D1CDFA514E1254A1DAB5E7D095F703BFACA70113CC5BF5FF5F79A6DB92B5C21BD41DB52D0667D4EA315ABBB3C9BDCFA0668B9B3490B0DE6CC211715AF72247DB3A18C68B3983B4BA21A16131B51C5B0BC0F70F3AC601AB0813CB2C2A08721CC8AB30571E0F50B32512832A33830A6E102242C82E209ADBC87298592421269EE769D13DD25D2EF9EE24B0851D82DE707C7181EC0E3EACC58BEADBE7F977985BDABA443F795EFE258B91FC6769EF391C14C6A9FF26C5B35037F73A9FFD3D432C80ABCB916A0CC67741387870B76110D188AD97E2FF4F45562B6AD625C23155C1BA0CEF748D5FFC75D3F9E6F792C11BB3AF22E8D7CDEF8F813FFC6D74AE8D799F93A9BCECC3E1A7E532BD6DFABD148E937A99398D3328420CCA484930A90DB85059DE09661377ABBA69142FE4E0
D55D2E201799B68F783C346176C7116DEC7F7B3BC0B2418C552E4D4F463F1C6C803DEB056ECE6124EE4BE763A0FD1DB5F6301074AD597F19096B41BF77D0C072C0B8EB01952494FC9C1E55351F0AEDF3BBE8E940CF745FD6BAD9FDAE30FD90372FF8433D971C14B5602F1048C2811B970201DBDADFCE37A5C08BF44E64F3FECE801DD6DE705BBB0533705536409F988DA443F5F2086CDBD5F8F2450F2BB6B1057CE8DD6DF7FDAEABAC1E724A201AA22758BF692BFBF7CB9F7AA7FC39089F82E896028E72FE8ACD9E6CCFC2650A8CF4EBAAE96E4F2011409D97CAD30D05D32AFC7946F20DE12B1D896C229D1F6AEC30D57984C57FA3E3D19E59B6DBD5C750DE1008FC704EB50D1A8DB385C4C76CADFADCB5237650627C8AA547DFA7F5C208A360FB53E27ADDF4D892DED40CEB53D572A041E6ABE6764CCDDC5169B9F96921598311E7B9D9238FE015264EC5AB4DE812BD463202B0F3BFF60AFEDF3617E6BF42DC194E5638408839338C0B423FD951F15387DCC031C32685170B08276DFE52C36C5E8CBF0D8FBD9738C0330451E491ADD5C6E16C02DB56035ADC9AFB08A7DD2C60E01F6E622F5F8F364B69CBECD4F6C2B21038D70964A600CF737621E8E1D4CE22326E3FA16364E593FC2D62A1D722B56DB6E9C96B09145F48B873A20969D6D79883BF31C774119ED66DDE71F7CA5454783BCDA7C1124A93CCCC89B0CFB4185A0ECE2E349B0A87BF346591C0BD32A899C7ABB1B1B5C74C6349DEECAD00EF3D511782D628F634AC20F9D5BB13704566D4775B7AF9BF3CD8E54CBA4BF4DFA0BB4D6BF5E2536CF779EC4209ED354AB064601E598F90948D9C45DAD4731B16635C21BF8D54DBDBC28BF9049B9AD811AF0B68C99BF47401A0964AFE579A1CB16D803A0C9FEDF1CB588B8984365EC43E47CB589BC3E1E04DABF5E755164FD864627DF56AA07130E8FA81F6EA97BA14BF575B71EF81994FD5901E21A9928B5F3D38FED6F1E1682B6030D7A49F6D3C86B1BF868A241533A3287C1511BC7E8060FD058D996A004440F0AA6189843F586DCF5021954066DACDFA0374997139C3DAC732A8752C8172A8524857B73AC6DBEBB672B503D1EC9C24887128DA92697EB8B9F1ADC15B5E65E83A9C7A5302A938FDD0D4F7BD5CE1D3513258B7F36A639F783331C271D771C3A74ADD034F9D49EAD887A936C917276C08B92E4F3060C2BDC4DB322DA9086C8984A1002114D5B1D2907C732ACD470FF9529ADF6B97A33A326A460FD0DB92294B13D307C11B28A1421B4C7AC87D31AB27BA8353DB96238AC3F191EEBA7216A483A0F68D78586A82499E2F8CC73D8DF8FD40A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Roboto-Bold cguidfix
/F2.1/Roboto-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 832 391 rc
51.5 313.39999 m
258.5 313.39999 l
258.5 277.39999 l
51.5 277.39999 l
h
51.5 313.39999 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 2 875 cm
49.5 561.59998 m
256.5 561.59998 l
256.5 597.59998 l
49.5 597.59998 l
h
49.5 561.59998 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 155 295.39999 cm
/F1.1[ 16 0 0 -16 0 0]sf
-72.761719 6.5 m
(!"#$%&'\(\)*\(+,\)!-\(.,)[ 9.976562 9.093750 5.523438 5.531250 12.109375 8.796875 5.335938 8.460938 3.976562 10.601562 8.460938 9.093750 4.281250 3.976562 9.976562 9.093750 8.460938 8.492188 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
582.5 313.39999 m
789.5 313.39999 l
789.5 277.39999 l
582.5 277.39999 l
h
582.5 313.39999 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 2 875 cm
580.5 561.59998 m
787.5 561.59998 l
787.5 597.59998 l
580.5 597.59998 l
h
580.5 561.59998 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 686 295.39999 cm
-54.226562 6.5 m
(!/0$\(1\)$\(0$234)[ 9.976562 8.046875 8.367188 5.531250 8.460938 13.984375 3.976562 5.531250 8.460938 8.367188 5.531250 4.031250 9.093750 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
78.5 246.8 m
285.5 246.8 l
285.5 210.8 l
78.5 210.8 l
h
78.5 246.8 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 2 875 cm
76.5 628.20001 m
283.5 628.20001 l
283.5 664.20001 l
76.5 664.20001 l
h
76.5 628.20001 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 182 228.8 cm
-61.277344 6.5 m
(5246\)7\(8\(7\)9\(0243)[ 11.414062 4.031250 9.093750 9.093750 3.976562 4.031250 8.359375 7.945312 8.460938 4.031250 3.976562 9.093750 8.460938 8.367188 4.031250 9.093750 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
555.5 246.8 m
762.5 246.8 l
762.5 210.8 l
555.5 210.8 l
h
555.5 246.8 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 2 875 cm
553.5 628.20001 m
760.5 628.20001 l
760.5 664.20001 l
553.5 664.20001 l
h
553.5 628.20001 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 659 228.8 cm
-95.335938 6.5 m
(!/0$\(1\)23$\(4'&$2"3\)$\(0$234)[ 9.976562 8.046875 8.367188 5.531250 8.460938 13.984375 3.976562 4.031250 9.093750 5.531250 8.460938 9.093750 5.484375 8.796875 5.531250 4.031250 9.093750 9.093750 3.976562 5.531250 8.460938 8.367188 5.531250 4.031250 9.093750 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
105.5 180.2 m
312.5 180.2 l
312.5 144.2 l
105.5 144.2 l
h
105.5 180.2 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 2 875 cm
103.5 694.79999 m
310.5 694.79999 l
310.5 730.79999 l
103.5 730.79999 l
h
103.5 694.79999 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 209 162.2 cm
-59.382812 6.5 m
(:"%\)7\(8\(7\)9\(0243)[ 8.640625 9.093750 12.109375 3.976562 4.031250 8.359375 7.945312 8.460938 4.031250 3.976562 9.093750 8.460938 8.367188 4.031250 9.093750 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
528.5 180.2 m
735.5 180.2 l
735.5 144.2 l
528.5 144.2 l
h
528.5 180.2 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 2 875 cm
526.5 694.79999 m
733.5 694.79999 l
733.5 730.79999 l
526.5 730.79999 l
h
526.5 694.79999 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 632 162.2 cm
-68.832031 6.5 m
(;"1-"3\(3$\)$\(0$234)[ 10.132812 9.093750 13.984375 9.093750 9.093750 9.093750 8.460938 9.093750 5.531250 3.976562 5.531250 8.460938 8.367188 5.531250 4.031250 9.093750 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
150.5 113.6 m
357.5 113.6 l
357.5 77.599998 l
150.5 77.599998 l
h
150.5 113.6 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 2 875 cm
148.5 761.40002 m
355.5 761.40002 l
355.5 797.40002 l
148.5 797.40002 l
h
148.5 761.40002 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 254 95.599998 cm
-25.269531 6.5 m
(;"9234)[ 10.132812 9.093750 9.093750 4.031250 9.093750 0.000000 ] xS
/Cs1 SC
0.26274511 0.627451 0.27843139 sc
CM
465.5 113.6 m
672.5 113.6 l
672.5 77.599998 l
465.5 77.599998 l
h
465.5 113.6 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 2 875 cm
463.5 761.40002 m
670.5 761.40002 l
670.5 797.40002 l
463.5 797.40002 l
h
463.5 761.40002 m
S
1 1 1 sc
0 i
1 0 0 -1 569 95.599998 cm
/F2.1[ 16 0 0 -16 0 0]sf
-42.046875 6.5 m
(!"#$%$&'$#"\()[ 10.992188 9.031250 4.273438 5.585938 3.984375 5.585938 8.468750 8.250000 5.585938 4.273438 9.031250 0.000000 ] xS
CM
317 47 m
524 47 l
524 11 l
317 11 l
h
317 47 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 2 875 cm
315 828 m
522 828 l
522 864 l
315 864 l
h
315 828 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 420.5 29 cm
/F1.1[ 16 0 0 -16 0 0]sf
-18.390625 6.5 m
(;"9\()[ 10.132812 9.093750 9.093750 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 2 875 cm
123.44595 531 m
136.9102 553.14124 l
S
0 J
0 j
0 i
141.06685 559.97662 m
136.9102 553.14124 l
139.47346 551.58246 m
141.06685 559.97662 l
134.34694 554.69995 l
S
1 J
1 j
0.60000002 i
160.2973 597.59998 m
168.98322 619.02527 l
S
0 J
0 j
0 i
171.98886 626.43921 m
168.98322 619.02527 l
171.76344 617.89819 m
171.98886 626.43921 l
166.203 620.1524 l
S
1 J
1 j
0.60000002 i
187.2973 664.20001 m
195.98322 685.62531 l
S
0 J
0 j
0 i
198.98886 693.03918 m
195.98322 685.62531 l
198.76344 684.49817 m
198.98886 693.03918 l
193.203 686.75238 l
S
1 J
1 j
0.60000002 i
219.16216 730.79999 m
234.29524 753.19696 l
S
0 J
0 j
0 i
238.77411 759.82568 m
234.29524 753.19696 l
236.78102 751.5174 m
238.77411 759.82568 l
231.80948 754.87653 l
S
1 J
1 j
0.60000002 i
297 797.40002 m
364.30807 824.32324 l
S
0 J
0 j
0 i
371.7359 827.29437 m
364.30807 824.32324 l
365.42224 821.53778 m
371.7359 827.29437 l
363.19391 827.10864 l
S
1 J
1 j
0.60000002 i
458.63513 828 m
517.83173 801.45123 l
S
0 J
0 j
0 i
525.13123 798.17749 m
517.83173 801.45123 l
516.60406 798.71393 m
525.13123 798.17749 l
519.05939 804.18854 l
S
1 J
1 j
0.60000002 i
584.02704 761.40002 m
606.16968 737.99207 l
S
0 J
0 j
0 i
611.6673 732.1803 m
606.16968 737.99207 l
603.9903 735.93042 m
611.6673 732.1803 l
608.34912 740.05365 l
S
1 J
1 j
0.60000002 i
637.2973 694.79999 m
645.98322 673.37469 l
S
0 J
0 j
0 i
648.98889 665.96082 m
645.98322 673.37469 l
643.203 672.24762 m
648.98889 665.96082 l
648.76343 674.50183 l
S
1 J
1 j
0.60000002 i
664.2973 628.20001 m
672.98322 606.77472 l
S
0 J
0 j
0 i
675.98889 599.36078 m
672.98322 606.77472 l
670.203 605.64758 m
675.98889 599.36078 l
675.76343 607.90186 l
S
1 J
1 j
0.60000002 i
692.51349 561.59998 m
702.7536 539.94946 l
S
0 J
0 j
0 i
706.17413 532.71759 m
702.7536 539.94946 l
700.04169 538.66681 m
706.17413 532.71759 l
705.46558 541.23218 l
S
1 1 1 sc
CM
11 380 m
218 380 l
218 344 l
11 344 l
h
11 380 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 2 875 cm
9 495 m
216 495 l
216 531 l
9 531 l
h
9 495 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 114.5 362 cm
-73.351562 6.5 m
(<=023\(00\)*\(+,\)!-\(.,)[ 10.226562 9.093750 8.367188 4.031250 9.093750 8.460938 8.367188 8.367188 3.976562 10.601562 8.460938 9.093750 4.281250 3.976562 9.976562 9.093750 8.460938 8.492188 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
614 380 m
821 380 l
821 344 l
614 344 l
h
614 380 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 2 875 cm
612 495 m
819 495 l
819 531 l
612 531 l
h
612 495 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 717.5 362 cm
-69.679688 6.5 m
(>..\(-$&3.\(\)$\(0$234)[ 10.359375 8.492188 8.492188 8.460938 9.093750 5.531250 8.796875 9.093750 8.492188 8.460938 3.976562 5.531250 8.460938 8.367188 5.531250 4.031250 9.093750 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 2 875 cm
216 513 m
602.09998 513 l
S
0 J
0 j
0 i
610.09998 513 m
602.09998 513 l
602.09998 510 m
610.09998 513 l
602.09998 516 l
S
1 J
1 j
0.60000002 i
256.5 579.59998 m
570.59998 579.59998 l
S
0 J
0 j
0 i
578.59998 579.59998 m
570.59998 579.59998 l
570.59998 576.59998 m
578.59998 579.59998 l
570.59998 582.59998 l
S
1 J
1 j
0.60000002 i
283.5 646.20001 m
543.59998 646.20001 l
S
0 J
0 j
0 i
551.59998 646.20001 m
543.59998 646.20001 l
543.59998 643.20001 m
551.59998 646.20001 l
543.59998 649.20001 l
S
1 J
1 j
0.60000002 i
310.5 712.79999 m
516.59998 712.79999 l
S
0 J
0 j
0 i
524.59998 712.79999 m
516.59998 712.79999 l
516.59998 709.79999 m
524.59998 712.79999 l
516.59998 715.79999 l
S
1 J
1 j
0.60000002 i
355.5 779.40002 m
453.60001 779.40002 l
S
0 J
0 j
0 i
461.60001 779.40002 m
453.60001 779.40002 l
453.60001 776.40002 m
461.60001 779.40002 l
453.60001 782.40002 l
S
ep
end
%%Trailer
%%EOF
